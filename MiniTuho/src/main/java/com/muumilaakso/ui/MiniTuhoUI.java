package com.muumilaakso.ui;

import com.muumilaakso.io.BibTex;
import com.muumilaakso.management.EntryTypeEnums;
import com.muumilaakso.management.EntryTypeEnums.entryTypes;
import com.muumilaakso.management.Reference;
import com.muumilaakso.management.Search;
import com.muumilaakso.management.Storage;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JComponent;
import javax.swing.JTextField;
import javax.swing.UIManager;

/**
 *
 * @author Muumilaakso
 */
public class MiniTuhoUI extends javax.swing.JFrame {

    Reference ref;
    ArrayList<String> auth, editor;
    ArrayList<JTextField> refTabTxt;
    ArrayList refTabComponents;
    HashMap<Integer, ArrayList<String>> authors, editors;
    String tag;
    DefaultListModel dlm;
    int authCounter, editorCounter;
    Storage storage;
    Search search;
    entryTypes[] eType;

    /**
     * Creates new form MiniTuhoUI
     */
    public MiniTuhoUI() {
        dlm = new DefaultListModel();
        storage = new Storage();
        refTabTxt = new ArrayList<JTextField>();
        refTabComponents = new ArrayList();
        eType = EntryTypeEnums.entryTypes.values();

        initComponents();
        storeComponents();
        hideComponents();
    }

    private void storeComponents() {
        refTabComponents.add(addressLbl);
        refTabTxt.add(addressTxt);

        refTabComponents.add(annoteLbl);
        refTabTxt.add(annoteTxt);

        refTabComponents.add(authorLbl);
        refTabTxt.add(authorTxt1);
        refTabTxt.add(authorTxt2);
        refTabTxt.add(authorTxt3);
        refTabComponents.add(addAuthBtn);

        refTabComponents.add(booktitleLbl);
        refTabTxt.add(booktitleTxt);

        refTabComponents.add(chapterLbl);
        refTabTxt.add(chapterTxt);

        refTabComponents.add(crossrefLbl);
        refTabTxt.add(crossrefTxt);

        refTabComponents.add(editionLbl);
        refTabTxt.add(editionTxt);

        refTabComponents.add(editorLbl);
        refTabTxt.add(editorTxt1);
        refTabTxt.add(editorTxt2);
        refTabTxt.add(editorTxt3);
        refTabComponents.add(addEditBtn);

        refTabComponents.add(eprintLbl);
        refTabTxt.add(eprintTxt);

        refTabComponents.add(howpublishedLbl);
        refTabTxt.add(howpublishedTxt);

        refTabComponents.add(institutionLbl);
        refTabTxt.add(institutionTxt);

        refTabComponents.add(journalLbl);
        refTabTxt.add(journalTxt);

        refTabComponents.add(keyLbl);
        refTabTxt.add(keyTxt);

        refTabComponents.add(monthLbl);
        refTabTxt.add(monthTxt);

        refTabComponents.add(noteLbl);
        refTabTxt.add(noteTxt);

        refTabComponents.add(numberLbl);
        refTabTxt.add(numberTxt);

        refTabComponents.add(organizationLbl);
        refTabTxt.add(organizationTxt);

        refTabComponents.add(pagesLbl);
        refTabTxt.add(pagesTxt);

        refTabComponents.add(publisherLbl);
        refTabTxt.add(publisherTxt);

        refTabComponents.add(schoolLbl);
        refTabTxt.add(schoolTxt);

        refTabComponents.add(seriesLbl);
        refTabTxt.add(seriesTxt);

        refTabComponents.add(titleLbl);
        refTabTxt.add(titleTxt);

        refTabComponents.add(typeLbl);
        refTabTxt.add(typeTxt);

        refTabComponents.add(urlLbl);
        refTabTxt.add(urlTxt);

        refTabComponents.add(volumeLbl);
        refTabTxt.add(volumeTxt);

        refTabComponents.add(yearLbl);
        refTabTxt.add(yearTxt);

        refTabComponents.add(tagLbl);
        refTabTxt.add(tagTxt);
        refTabComponents.add(addTagBtn);
    }

    private void hideComponents() {
        for (Object o : refTabComponents) {
            JComponent c = (JComponent) o;
            c.setVisible(false);
        }
        for (JTextField txt : refTabTxt) {
            txt.setVisible(false);
        }
    }

    private void clearTxt() {
        for (JTextField txt : refTabTxt) {
            if (!(txt.equals(authorTxt1) || txt.equals(authorTxt2)
                    || txt.equals(authorTxt3) || txt.equals(editorTxt1)
                    || txt.equals(editorTxt2) || txt.equals(editorTxt3))) {
                txt.setText("");
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollBar1 = new javax.swing.JScrollBar();
        closeBtn = new javax.swing.JButton();
        refTab = new javax.swing.JTabbedPane();
        addPnl = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jPanel5 = new javax.swing.JPanel();
        entryLbl = new javax.swing.JLabel();
        entryCBx = new javax.swing.JComboBox();
        eprintLbl = new javax.swing.JLabel();
        eprintTxt = new javax.swing.JTextField();
        volumeLbl = new javax.swing.JLabel();
        numberTxt = new javax.swing.JTextField();
        chapterLbl = new javax.swing.JLabel();
        journalTxt = new javax.swing.JTextField();
        noteTxt = new javax.swing.JTextField();
        keyLbl = new javax.swing.JLabel();
        numberLbl = new javax.swing.JLabel();
        howpublishedTxt = new javax.swing.JTextField();
        howpublishedLbl = new javax.swing.JLabel();
        noteLbl = new javax.swing.JLabel();
        institutionLbl = new javax.swing.JLabel();
        editorTxt2 = new javax.swing.JTextField();
        authorTxt3 = new javax.swing.JTextField();
        authorTxt2 = new javax.swing.JTextField();
        organizationTxt = new javax.swing.JTextField();
        editionTxt = new javax.swing.JTextField();
        editorTxt3 = new javax.swing.JTextField();
        publisherLbl = new javax.swing.JLabel();
        yearLbl = new javax.swing.JLabel();
        pagesLbl = new javax.swing.JLabel();
        pagesTxt = new javax.swing.JTextField();
        annoteTxt = new javax.swing.JTextField();
        volumeTxt = new javax.swing.JTextField();
        yearTxt = new javax.swing.JTextField();
        annoteLbl = new javax.swing.JLabel();
        editorTxt1 = new javax.swing.JTextField();
        authorTxt1 = new javax.swing.JTextField();
        booktitleLbl = new javax.swing.JLabel();
        booktitleTxt = new javax.swing.JTextField();
        editorLbl = new javax.swing.JLabel();
        organizationLbl = new javax.swing.JLabel();
        crossrefLbl = new javax.swing.JLabel();
        chapterTxt = new javax.swing.JTextField();
        editionLbl = new javax.swing.JLabel();
        crossrefTxt = new javax.swing.JTextField();
        institutionTxt = new javax.swing.JTextField();
        journalLbl = new javax.swing.JLabel();
        titleLbl = new javax.swing.JLabel();
        typeTxt = new javax.swing.JTextField();
        typeLbl = new javax.swing.JLabel();
        urlTxt = new javax.swing.JTextField();
        keyTxt = new javax.swing.JTextField();
        monthLbl = new javax.swing.JLabel();
        authorLbl = new javax.swing.JLabel();
        monthTxt = new javax.swing.JTextField();
        addressLbl = new javax.swing.JLabel();
        titleTxt = new javax.swing.JTextField();
        addressTxt = new javax.swing.JTextField();
        seriesLbl = new javax.swing.JLabel();
        seriesTxt = new javax.swing.JTextField();
        schoolLbl = new javax.swing.JLabel();
        schoolTxt = new javax.swing.JTextField();
        publisherTxt = new javax.swing.JTextField();
        addBtn = new javax.swing.JButton();
        addAuthBtn = new javax.swing.JButton();
        addEditBtn = new javax.swing.JButton();
        urlLbl = new javax.swing.JLabel();
        optionalChckBx = new javax.swing.JCheckBox();
        tagTxt = new javax.swing.JTextField();
        tagLbl = new javax.swing.JLabel();
        addTagBtn = new javax.swing.JButton();
        editPnl = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        refList = new javax.swing.JList(dlm);
        remRefBtn = new javax.swing.JButton();
        editRefBtn = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        searchTxt = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        emptyBtn = new javax.swing.JButton();
        bibtexBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("teX");

        closeBtn.setText("Sulje");
        closeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtnActionPerformed(evt);
            }
        });

        refTab.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                refTabStateChanged(evt);
            }
        });

        entryLbl.setText("Entry");

        entryCBx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "article", "book", "booklet", "conference", "inbook", "incollection", "inproceedings", "manual", "mastersthesis", "misc", "phdthesis", "proceedings", "techreport", "unpublished" }));
        entryCBx.setSelectedIndex(-1);
        entryCBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entryCBxActionPerformed(evt);
            }
        });

        eprintLbl.setText("eprint");

        volumeLbl.setText("volume");

        chapterLbl.setText("chapter");

        keyLbl.setText("key");

        numberLbl.setText("number");

        howpublishedLbl.setText("howpublished");

        noteLbl.setText("note");

        institutionLbl.setText("institution");

        editorTxt2.setText("last");
        editorTxt2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editorTxt2ActionPerformed(evt);
            }
        });

        authorTxt3.setText("prefix");
        authorTxt3.setMinimumSize(new java.awt.Dimension(51, 28));

        authorTxt2.setText("last");
        authorTxt2.setMinimumSize(new java.awt.Dimension(35, 28));
        authorTxt2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                authorTxt2ActionPerformed(evt);
            }
        });

        editionTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editionTxtActionPerformed(evt);
            }
        });

        editorTxt3.setText("prefix");

        publisherLbl.setText("publisher");

        yearLbl.setText("year");

        pagesLbl.setText("pages");

        annoteTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annoteTxtActionPerformed(evt);
            }
        });
        annoteTxt.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                annoteTxtInputMethodTextChanged(evt);
            }
        });

        volumeTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volumeTxtActionPerformed(evt);
            }
        });

        yearTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearTxtActionPerformed(evt);
            }
        });

        annoteLbl.setText("annote");

        editorTxt1.setText("first");
        editorTxt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editorTxt1ActionPerformed(evt);
            }
        });

        authorTxt1.setText("first");
        authorTxt1.setMinimumSize(new java.awt.Dimension(38, 28));
        authorTxt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                authorTxt1ActionPerformed(evt);
            }
        });

        booktitleLbl.setText("booktitle");

        booktitleTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                booktitleTxtActionPerformed(evt);
            }
        });

        editorLbl.setText("editor");

        organizationLbl.setText("organization");

        crossrefLbl.setText("crossref");

        chapterTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chapterTxtActionPerformed(evt);
            }
        });

        editionLbl.setText("edition");

        crossrefTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crossrefTxtActionPerformed(evt);
            }
        });

        journalLbl.setText("journal");

        titleLbl.setText("title");

        typeTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeTxtActionPerformed(evt);
            }
        });

        typeLbl.setText("type");

        urlTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                urlTxtActionPerformed(evt);
            }
        });

        monthLbl.setText("month");

        authorLbl.setText("author");

        addressLbl.setText("address");

        titleTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titleTxtActionPerformed(evt);
            }
        });

        addressTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressTxtActionPerformed(evt);
            }
        });

        seriesLbl.setText("series");

        seriesTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seriesTxtActionPerformed(evt);
            }
        });

        schoolLbl.setText("school");

        schoolTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schoolTxtActionPerformed(evt);
            }
        });

        publisherTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                publisherTxtActionPerformed(evt);
            }
        });

        addBtn.setText("Lisää");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        addAuthBtn.setText("Uusi");
        addAuthBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAuthBtnActionPerformed(evt);
            }
        });

        addEditBtn.setText("Uusi");
        addEditBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEditBtnActionPerformed(evt);
            }
        });

        urlLbl.setText("url");

        optionalChckBx.setText("Lisäkentät");
        optionalChckBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionalChckBxActionPerformed(evt);
            }
        });

        tagLbl.setText("tags");

        addTagBtn.setText("Uusi");
        addTagBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTagBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(urlLbl)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addComponent(addBtn)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(optionalChckBx))
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(publisherLbl)
                                            .addComponent(pagesLbl)
                                            .addComponent(journalLbl)
                                            .addComponent(titleLbl)
                                            .addComponent(typeLbl)
                                            .addComponent(keyLbl)
                                            .addComponent(numberLbl)
                                            .addComponent(noteLbl)
                                            .addComponent(howpublishedLbl)
                                            .addComponent(editionLbl)
                                            .addComponent(institutionLbl)
                                            .addComponent(crossrefLbl)
                                            .addComponent(chapterLbl)
                                            .addComponent(authorLbl)
                                            .addComponent(monthLbl)
                                            .addComponent(schoolLbl)
                                            .addComponent(seriesLbl)
                                            .addComponent(addressLbl)
                                            .addComponent(organizationLbl)
                                            .addComponent(booktitleLbl)
                                            .addComponent(editorLbl)
                                            .addComponent(annoteLbl)
                                            .addComponent(entryLbl)
                                            .addComponent(eprintLbl))
                                        .addComponent(volumeLbl, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addComponent(yearLbl, javax.swing.GroupLayout.Alignment.LEADING))
                                .addComponent(tagLbl, javax.swing.GroupLayout.Alignment.LEADING))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(crossrefTxt)
                                        .addComponent(editionTxt)
                                        .addComponent(organizationTxt)
                                        .addComponent(pagesTxt)
                                        .addComponent(chapterTxt)
                                        .addComponent(titleTxt)
                                        .addComponent(booktitleTxt)
                                        .addComponent(keyTxt)
                                        .addComponent(monthTxt)
                                        .addComponent(schoolTxt)
                                        .addComponent(noteTxt)
                                        .addComponent(publisherTxt)
                                        .addComponent(seriesTxt)
                                        .addComponent(urlTxt)
                                        .addComponent(typeTxt)
                                        .addComponent(institutionTxt)
                                        .addComponent(journalTxt)
                                        .addComponent(howpublishedTxt)
                                        .addComponent(numberTxt)
                                        .addComponent(eprintTxt)
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                            .addComponent(editorTxt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(editorTxt2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(editorTxt3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(addEditBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addComponent(addressTxt)
                                        .addComponent(entryCBx, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                            .addComponent(authorTxt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(authorTxt2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(authorTxt3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(addAuthBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addComponent(annoteTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                            .addComponent(tagTxt)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(addTagBtn)))
                                    .addComponent(volumeTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(yearTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {addressTxt, annoteTxt, booktitleTxt, chapterTxt, crossrefTxt, editionTxt, entryCBx, eprintTxt, howpublishedTxt, institutionTxt, journalTxt, keyTxt, monthTxt, noteTxt, numberTxt, organizationTxt, pagesTxt, publisherTxt, schoolTxt, seriesTxt, titleTxt, typeTxt, urlTxt, volumeTxt, yearTxt});

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(entryCBx)
                    .addComponent(entryLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addressTxt)
                    .addComponent(addressLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(annoteTxt)
                    .addComponent(annoteLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(authorTxt1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(authorLbl)
                    .addComponent(authorTxt3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(authorTxt2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addAuthBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(booktitleTxt)
                    .addComponent(booktitleLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chapterTxt)
                    .addComponent(chapterLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(crossrefTxt)
                    .addComponent(crossrefLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editionTxt)
                    .addComponent(editionLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editorTxt1)
                    .addComponent(editorLbl)
                    .addComponent(editorTxt2)
                    .addComponent(editorTxt3)
                    .addComponent(addEditBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eprintTxt)
                    .addComponent(eprintLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(howpublishedTxt)
                    .addComponent(howpublishedLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(institutionTxt)
                    .addComponent(institutionLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(journalTxt)
                    .addComponent(journalLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(keyTxt)
                    .addComponent(keyLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(monthTxt)
                    .addComponent(monthLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(noteTxt)
                    .addComponent(noteLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numberTxt)
                    .addComponent(numberLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(organizationTxt)
                    .addComponent(organizationLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pagesTxt)
                    .addComponent(pagesLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(publisherTxt)
                    .addComponent(publisherLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(schoolTxt)
                    .addComponent(schoolLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(seriesTxt)
                    .addComponent(seriesLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(titleTxt)
                    .addComponent(titleLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(typeTxt)
                    .addComponent(typeLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(urlTxt)
                    .addComponent(urlLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(volumeLbl)
                    .addComponent(volumeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yearTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yearLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tagTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addTagBtn)
                    .addComponent(tagLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addBtn)
                    .addComponent(optionalChckBx))
                .addContainerGap())
        );

        jScrollPane4.setViewportView(jPanel5);

        javax.swing.GroupLayout addPnlLayout = new javax.swing.GroupLayout(addPnl);
        addPnl.setLayout(addPnlLayout);
        addPnlLayout.setHorizontalGroup(
            addPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 358, Short.MAX_VALUE)
        );
        addPnlLayout.setVerticalGroup(
            addPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE)
        );

        refTab.addTab("Viite", addPnl);

        refList.setModel(dlm);
        refList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                refListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(refList);

        remRefBtn.setText("Poista");
        remRefBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remRefBtnActionPerformed(evt);
            }
        });

        editRefBtn.setText("Muokkaa");
        editRefBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editRefBtnActionPerformed(evt);
            }
        });

        jLabel9.setText("Etsi");

        searchTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTxtActionPerformed(evt);
            }
        });

        searchBtn.setText("Hae");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        emptyBtn.setText("Tyhjennä");
        emptyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emptyBtnActionPerformed(evt);
            }
        });

        bibtexBtn.setText("BibTeX");
        bibtexBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bibtexBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout editPnlLayout = new javax.swing.GroupLayout(editPnl);
        editPnl.setLayout(editPnlLayout);
        editPnlLayout.setHorizontalGroup(
            editPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(editPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                    .addGroup(editPnlLayout.createSequentialGroup()
                        .addGroup(editPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(editPnlLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchTxt)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchBtn))
                            .addGroup(editPnlLayout.createSequentialGroup()
                                .addComponent(remRefBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(editRefBtn)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(editPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(emptyBtn)
                            .addComponent(bibtexBtn, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap())))
        );
        editPnlLayout.setVerticalGroup(
            editPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(editPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(searchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn)
                    .addComponent(emptyBtn))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(editPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(remRefBtn)
                    .addComponent(editRefBtn)
                    .addComponent(bibtexBtn))
                .addContainerGap())
        );

        refTab.addTab("Muokkaa", editPnl);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(closeBtn)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addComponent(refTab, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(refTab)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeBtn)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_closeBtnActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        String srch = searchTxt.getText();

        if (srch != null && !srch.isEmpty()) {
            search = new Search(storage.getRefs());
            populateList(search.listMatching(srch));
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void searchTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTxtActionPerformed

    private void remRefBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remRefBtnActionPerformed
        Reference rem = getSelected();

        if (rem != null) {
            storage.remRef(rem);

            if (searchTxt.getText() != null && !searchTxt.getText().isEmpty()) {
                search = new Search(storage.getRefs());
                populateList(search.listMatching(searchTxt.getText()));
            } else {
                populateList(storage.getRefs());
            }
        }
    }//GEN-LAST:event_remRefBtnActionPerformed

    private Reference getSelected() {
        int idx = refList.getSelectedIndex();
        Reference selected = null;

        if (idx != -1) {
            String type = (String) dlm.get(idx);
            search = new Search(storage.getRefs());
            selected = search.listMatching(type, true).get(0);
        }
        return selected;
    }

    private void refListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_refListValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_refListValueChanged

    private void addEditBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEditBtnActionPerformed
        // TODO add your handling code here:
        getEditor();
    }//GEN-LAST:event_addEditBtnActionPerformed

    private void addAuthBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAuthBtnActionPerformed
        // TODO add your handling code here:
        getAuthor();
    }//GEN-LAST:event_addAuthBtnActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        if (addBtn.getText().equals("Lisää")) {
            ref = new Reference();
            storage.addRef(ref);
            authors = new HashMap<Integer, ArrayList<String>>();
            editors = new HashMap<Integer, ArrayList<String>>();
            tag = "";
        } else {
            addBtn.setText("Lisää");
        }
        ref.setAddress(addressTxt.getText());
        ref.setAnnote(annoteTxt.getText());
//        author

        getAuthor();
        ref.setAuthor(authors);

        ref.setBooktitle(booktitleTxt.getText());
        ref.setChapter(chapterTxt.getText());
        ref.setCrossref(crossrefTxt.getText());
        ref.setEdition(editionTxt.getText());
//        editor

        getEditor();
        ref.setEditor(editors);

        String entryType = eType[entryCBx.getSelectedIndex()].toString();
        ref.setEntrytype(entryType);

        ref.setEprint(eprintTxt.getText());
        ref.setHowpublished(howpublishedTxt.getText());
        ref.setInstitution(institutionTxt.getText());
        ref.setJournal(journalTxt.getText());
        ref.setKey(keyTxt.getText());
        ref.setMonth(monthTxt.getText());
        ref.setNumber(numberTxt.getText());
        ref.setOrganization(organizationTxt.getText());
        ref.setPages(pagesTxt.getText());
        ref.setPublisher(publisherTxt.getText());
        ref.setSchool(schoolTxt.getText());
        ref.setSeries(seriesTxt.getText());
        ref.setTitle(titleTxt.getText());
        ref.setType(typeTxt.getText());
        ref.setUrl(urlTxt.getText());
        ref.setVolume(volumeTxt.getText());
        ref.setYear(yearTxt.getText());
        ref.setTag(tagTxt.getText());

        authCounter = 0;
        editorCounter = 0;

        clearTxt();

        populateList(storage.getRefs());
    }//GEN-LAST:event_addBtnActionPerformed

    private void populateList(ArrayList<Reference> refs) {
        dlm.clear();

        if (refs != null && !refs.isEmpty()) {
            for (Reference reference : refs) {
                dlm.addElement(reference.getTitle());
            }
        }
    }

    private void publisherTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_publisherTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_publisherTxtActionPerformed

    private void schoolTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schoolTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_schoolTxtActionPerformed

    private void seriesTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seriesTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_seriesTxtActionPerformed

    private void addressTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressTxtActionPerformed

    private void titleTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titleTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_titleTxtActionPerformed

    private void urlTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_urlTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_urlTxtActionPerformed

    private void typeTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_typeTxtActionPerformed

    private void crossrefTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crossrefTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_crossrefTxtActionPerformed

    private void chapterTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chapterTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chapterTxtActionPerformed

    private void booktitleTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_booktitleTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_booktitleTxtActionPerformed

    private void authorTxt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_authorTxt1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_authorTxt1ActionPerformed

    private void editorTxt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editorTxt1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editorTxt1ActionPerformed

    private void yearTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yearTxtActionPerformed

    private void volumeTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volumeTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_volumeTxtActionPerformed

    private void annoteTxtInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_annoteTxtInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_annoteTxtInputMethodTextChanged

    private void annoteTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annoteTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_annoteTxtActionPerformed

    private void editionTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editionTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editionTxtActionPerformed

    private void authorTxt2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_authorTxt2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_authorTxt2ActionPerformed

    private void editorTxt2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editorTxt2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editorTxt2ActionPerformed

    private void entryCBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entryCBxActionPerformed
        // TODO add your handling code here:
        clearTxt();
        hideComponents();

        switch (entryCBx.getSelectedIndex()) {
            case 0:
//            article
                authorLbl.setVisible(true);
                authorTxt1.setVisible(true);
                authorTxt2.setVisible(true);
                authorTxt3.setVisible(true);
                addAuthBtn.setVisible(true);

                titleLbl.setVisible(true);
                titleTxt.setVisible(true);

                journalLbl.setVisible(true);
                journalTxt.setVisible(true);

                yearLbl.setVisible(true);
                yearTxt.setVisible(true);

                keyLbl.setVisible(true);
                keyTxt.setVisible(true);
//                optional
                if (optionalChckBx.isSelected()) {
                    volumeLbl.setVisible(true);
                    volumeTxt.setVisible(true);

                    numberLbl.setVisible(true);
                    numberTxt.setVisible(true);

                    pagesLbl.setVisible(true);
                    pagesTxt.setVisible(true);

                    monthLbl.setVisible(true);
                    monthTxt.setVisible(true);

                    noteLbl.setVisible(true);
                    noteTxt.setVisible(true);
                }
                break;
            case 1:
//                book
                authorLbl.setVisible(true);
                authorTxt1.setVisible(true);
                authorTxt2.setVisible(true);
                authorTxt3.setVisible(true);
                addAuthBtn.setVisible(true);

                editorLbl.setVisible(true);
                editorTxt1.setVisible(true);
                editorTxt2.setVisible(true);
                editorTxt3.setVisible(true);
                addEditBtn.setVisible(true);

                titleLbl.setVisible(true);
                titleTxt.setVisible(true);

                publisherLbl.setVisible(true);
                publisherTxt.setVisible(true);

                yearLbl.setVisible(true);
                yearTxt.setVisible(true);

                keyLbl.setVisible(true);
                keyTxt.setVisible(true);

//                optional
                if (optionalChckBx.isSelected()) {
                    volumeLbl.setVisible(true);
                    volumeTxt.setVisible(true);

                    numberLbl.setVisible(true);
                    numberTxt.setVisible(true);

                    seriesLbl.setVisible(true);
                    seriesTxt.setVisible(true);

                    addressLbl.setVisible(true);
                    addressTxt.setVisible(true);

                    editionLbl.setVisible(true);
                    editionTxt.setVisible(true);

                    monthLbl.setVisible(true);
                    monthTxt.setVisible(true);

                    noteLbl.setVisible(true);
                    noteTxt.setVisible(true);
                }
                break;
            case 2:
//                booklet
                titleLbl.setVisible(true);
                titleTxt.setVisible(true);

                keyLbl.setVisible(true);
                keyTxt.setVisible(true);

//                optional
                if (optionalChckBx.isSelected()) {
                    authorLbl.setVisible(true);
                    authorTxt1.setVisible(true);
                    authorTxt2.setVisible(true);
                    authorTxt3.setVisible(true);
                    addAuthBtn.setVisible(true);

                    howpublishedLbl.setVisible(true);
                    howpublishedTxt.setVisible(true);

                    addressLbl.setVisible(true);
                    addressTxt.setVisible(true);

                    monthLbl.setVisible(true);
                    monthTxt.setVisible(true);

                    yearLbl.setVisible(true);
                    yearTxt.setVisible(true);

                    noteLbl.setVisible(true);
                    noteTxt.setVisible(true);
                }
                break;
            case 3:
//                conference
                authorLbl.setVisible(true);
                authorTxt1.setVisible(true);
                authorTxt2.setVisible(true);
                authorTxt3.setVisible(true);
                addAuthBtn.setVisible(true);

                titleLbl.setVisible(true);
                titleTxt.setVisible(true);

                booktitleLbl.setVisible(true);
                booktitleTxt.setVisible(true);

                yearLbl.setVisible(true);
                yearTxt.setVisible(true);

                keyLbl.setVisible(true);
                keyTxt.setVisible(true);

//                optional
                if (optionalChckBx.isSelected()) {
                    editorLbl.setVisible(true);
                    editorTxt1.setVisible(true);
                    editorTxt2.setVisible(true);
                    editorTxt3.setVisible(true);
                    addEditBtn.setVisible(true);

                    volumeLbl.setVisible(true);
                    volumeTxt.setVisible(true);

                    numberLbl.setVisible(true);
                    numberTxt.setVisible(true);

                    seriesLbl.setVisible(true);
                    seriesTxt.setVisible(true);

                    pagesLbl.setVisible(true);
                    pagesTxt.setVisible(true);

                    addressLbl.setVisible(true);
                    addressTxt.setVisible(true);

                    monthLbl.setVisible(true);
                    monthTxt.setVisible(true);

                    organizationLbl.setVisible(true);
                    organizationTxt.setVisible(true);

                    publisherLbl.setVisible(true);
                    publisherTxt.setVisible(true);

                    noteLbl.setVisible(true);
                    noteTxt.setVisible(true);
                }
                break;
            case 4:
//                inbook
                authorLbl.setVisible(true);
                authorTxt1.setVisible(true);
                authorTxt2.setVisible(true);
                authorTxt3.setVisible(true);
                addAuthBtn.setVisible(true);

                editorLbl.setVisible(true);
                editorTxt1.setVisible(true);
                editorTxt2.setVisible(true);
                editorTxt3.setVisible(true);
                addEditBtn.setVisible(true);

                titleLbl.setVisible(true);
                titleTxt.setVisible(true);

                chapterLbl.setVisible(true);
                chapterTxt.setVisible(true);

                pagesLbl.setVisible(true);
                pagesTxt.setVisible(true);

                publisherLbl.setVisible(true);
                publisherTxt.setVisible(true);

                yearLbl.setVisible(true);
                yearTxt.setVisible(true);

                keyLbl.setVisible(true);
                keyTxt.setVisible(true);
//                optional
                if (optionalChckBx.isSelected()) {
                    volumeLbl.setVisible(true);
                    volumeTxt.setVisible(true);

                    numberLbl.setVisible(true);
                    numberTxt.setVisible(true);

                    seriesLbl.setVisible(true);
                    seriesTxt.setVisible(true);

                    typeLbl.setVisible(true);
                    typeTxt.setVisible(true);

                    addressLbl.setVisible(true);
                    addressTxt.setVisible(true);

                    editionLbl.setVisible(true);
                    editionTxt.setVisible(true);

                    monthLbl.setVisible(true);
                    monthTxt.setVisible(true);

                    noteLbl.setVisible(true);
                    noteTxt.setVisible(true);
                }
                break;
            case 5:
//                incollection
                authorLbl.setVisible(true);
                authorTxt1.setVisible(true);
                authorTxt2.setVisible(true);
                authorTxt3.setVisible(true);
                addAuthBtn.setVisible(true);

                titleLbl.setVisible(true);
                titleTxt.setVisible(true);

                booktitleLbl.setVisible(true);
                booktitleTxt.setVisible(true);

                publisherLbl.setVisible(true);
                publisherTxt.setVisible(true);

                yearLbl.setVisible(true);
                yearTxt.setVisible(true);

                keyLbl.setVisible(true);
                keyTxt.setVisible(true);
//                optional
                if (optionalChckBx.isSelected()) {
                    editorLbl.setVisible(true);
                    editorTxt1.setVisible(true);
                    editorTxt2.setVisible(true);
                    editorTxt3.setVisible(true);
                    addEditBtn.setVisible(true);

                    volumeLbl.setVisible(true);
                    volumeTxt.setVisible(true);

                    numberLbl.setVisible(true);
                    numberTxt.setVisible(true);

                    seriesLbl.setVisible(true);
                    seriesTxt.setVisible(true);

                    typeLbl.setVisible(true);
                    typeTxt.setVisible(true);

                    chapterLbl.setVisible(true);
                    chapterTxt.setVisible(true);

                    pagesLbl.setVisible(true);
                    pagesTxt.setVisible(true);

                    addressLbl.setVisible(true);
                    addressTxt.setVisible(true);

                    editionLbl.setVisible(true);
                    editionTxt.setVisible(true);

                    monthLbl.setVisible(true);
                    monthTxt.setVisible(true);

                    noteLbl.setVisible(true);
                    noteTxt.setVisible(true);
                }
                break;
            case 6:
//                inproceedings
                authorLbl.setVisible(true);
                authorTxt1.setVisible(true);
                authorTxt2.setVisible(true);
                authorTxt3.setVisible(true);
                addAuthBtn.setVisible(true);

                titleLbl.setVisible(true);
                titleTxt.setVisible(true);

                booktitleLbl.setVisible(true);
                booktitleTxt.setVisible(true);

                yearLbl.setVisible(true);
                yearTxt.setVisible(true);

                keyLbl.setVisible(true);
                keyTxt.setVisible(true);

//                optional
                if (optionalChckBx.isSelected()) {
                    editorLbl.setVisible(true);
                    editorTxt1.setVisible(true);
                    editorTxt2.setVisible(true);
                    editorTxt3.setVisible(true);
                    addEditBtn.setVisible(true);

                    volumeLbl.setVisible(true);
                    volumeTxt.setVisible(true);

                    numberLbl.setVisible(true);
                    numberTxt.setVisible(true);

                    seriesLbl.setVisible(true);
                    seriesTxt.setVisible(true);

                    pagesLbl.setVisible(true);
                    pagesTxt.setVisible(true);

                    addressLbl.setVisible(true);
                    addressTxt.setVisible(true);

                    monthLbl.setVisible(true);
                    monthTxt.setVisible(true);

                    organizationLbl.setVisible(true);
                    organizationTxt.setVisible(true);

                    publisherLbl.setVisible(true);
                    publisherTxt.setVisible(true);

                    noteLbl.setVisible(true);
                    noteTxt.setVisible(true);
                }
                break;
            case 7:
//                manual
                titleLbl.setVisible(true);
                titleTxt.setVisible(true);

                keyLbl.setVisible(true);
                keyTxt.setVisible(true);
//                optional
                if (optionalChckBx.isSelected()) {
                    authorLbl.setVisible(true);
                    authorTxt1.setVisible(true);
                    authorTxt2.setVisible(true);
                    authorTxt3.setVisible(true);
                    addAuthBtn.setVisible(true);

                    organizationLbl.setVisible(true);
                    organizationTxt.setVisible(true);

                    addressLbl.setVisible(true);
                    addressTxt.setVisible(true);

                    editionLbl.setVisible(true);
                    editionTxt.setVisible(true);

                    monthLbl.setVisible(true);
                    monthTxt.setVisible(true);

                    yearLbl.setVisible(true);
                    yearTxt.setVisible(true);

                    noteLbl.setVisible(true);
                    noteTxt.setVisible(true);
                }
                break;
            case 8:
//                mastersthesis
                authorLbl.setVisible(true);
                authorTxt1.setVisible(true);
                authorTxt2.setVisible(true);
                authorTxt3.setVisible(true);
                addAuthBtn.setVisible(true);

                titleLbl.setVisible(true);
                titleTxt.setVisible(true);

                schoolLbl.setVisible(true);
                schoolTxt.setVisible(true);

                yearLbl.setVisible(true);
                yearTxt.setVisible(true);

                keyLbl.setVisible(true);
                keyTxt.setVisible(true);
//                optional
                if (optionalChckBx.isSelected()) {
                    typeLbl.setVisible(true);
                    typeTxt.setVisible(true);

                    addressLbl.setVisible(true);
                    addressTxt.setVisible(true);

                    monthLbl.setVisible(true);
                    monthTxt.setVisible(true);

                    noteLbl.setVisible(true);
                    noteTxt.setVisible(true);
                }
                break;
            case 9:
//                misc
                keyLbl.setVisible(true);
                keyTxt.setVisible(true);
//                optional
                if (optionalChckBx.isSelected()) {
                    authorLbl.setVisible(true);
                    authorTxt1.setVisible(true);
                    authorTxt2.setVisible(true);
                    authorTxt3.setVisible(true);
                    addAuthBtn.setVisible(true);

                    titleLbl.setVisible(true);
                    titleTxt.setVisible(true);

                    howpublishedLbl.setVisible(true);
                    howpublishedTxt.setVisible(true);

                    monthLbl.setVisible(true);
                    monthTxt.setVisible(true);

                    yearLbl.setVisible(true);
                    yearTxt.setVisible(true);

                    noteLbl.setVisible(true);
                    noteTxt.setVisible(true);
                }
                break;
            case 10:
//                phdthesis
                authorLbl.setVisible(true);
                authorTxt1.setVisible(true);
                authorTxt2.setVisible(true);
                authorTxt3.setVisible(true);
                addAuthBtn.setVisible(true);

                titleLbl.setVisible(true);
                titleTxt.setVisible(true);

                schoolLbl.setVisible(true);
                schoolTxt.setVisible(true);

                yearLbl.setVisible(true);
                yearTxt.setVisible(true);

                keyLbl.setVisible(true);
                keyTxt.setVisible(true);
//                optional
                if (optionalChckBx.isSelected()) {
                    typeLbl.setVisible(true);
                    typeTxt.setVisible(true);

                    addressLbl.setVisible(true);
                    addressTxt.setVisible(true);

                    monthLbl.setVisible(true);
                    monthTxt.setVisible(true);

                    noteLbl.setVisible(true);
                    noteTxt.setVisible(true);
                }
                break;
            case 11:
//                proceedings
                titleLbl.setVisible(true);
                titleTxt.setVisible(true);

                yearLbl.setVisible(true);
                yearTxt.setVisible(true);

                keyLbl.setVisible(true);
                keyTxt.setVisible(true);
//                optional
                if (optionalChckBx.isSelected()) {
                    editorLbl.setVisible(true);
                    editorTxt1.setVisible(true);
                    editorTxt2.setVisible(true);
                    editorTxt3.setVisible(true);
                    addEditBtn.setVisible(true);

                    volumeLbl.setVisible(true);
                    volumeTxt.setVisible(true);

                    numberLbl.setVisible(true);
                    numberTxt.setVisible(true);

                    seriesLbl.setVisible(true);
                    seriesTxt.setVisible(true);

                    addressLbl.setVisible(true);
                    addressTxt.setVisible(true);

                    monthLbl.setVisible(true);
                    monthTxt.setVisible(true);

                    publisherLbl.setVisible(true);
                    publisherTxt.setVisible(true);

                    organizationLbl.setVisible(true);
                    organizationTxt.setVisible(true);

                    noteLbl.setVisible(true);
                    noteTxt.setVisible(true);
                }
                break;
            case 12:
//                techreport
                authorLbl.setVisible(true);
                authorTxt1.setVisible(true);
                authorTxt2.setVisible(true);
                authorTxt3.setVisible(true);
                addAuthBtn.setVisible(true);

                titleLbl.setVisible(true);
                titleTxt.setVisible(true);

                institutionLbl.setVisible(true);
                institutionTxt.setVisible(true);

                yearLbl.setVisible(true);
                yearTxt.setVisible(true);

                keyLbl.setVisible(true);
                keyTxt.setVisible(true);
//                optional
                if (optionalChckBx.isSelected()) {
                    typeLbl.setVisible(true);
                    typeTxt.setVisible(true);

                    numberLbl.setVisible(true);
                    numberTxt.setVisible(true);

                    addressLbl.setVisible(true);
                    addressTxt.setVisible(true);

                    monthLbl.setVisible(true);
                    monthTxt.setVisible(true);

                    noteLbl.setVisible(true);
                    noteTxt.setVisible(true);
                }
                break;
            case 13:
//                unpublished
                authorLbl.setVisible(true);
                authorTxt1.setVisible(true);
                authorTxt2.setVisible(true);
                authorTxt3.setVisible(true);
                addAuthBtn.setVisible(true);

                titleLbl.setVisible(true);
                titleTxt.setVisible(true);

                noteLbl.setVisible(true);
                noteTxt.setVisible(true);

                keyLbl.setVisible(true);
                keyTxt.setVisible(true);
//                optional
                if (optionalChckBx.isSelected()) {
                    monthLbl.setVisible(true);
                    monthTxt.setVisible(true);

                    yearLbl.setVisible(true);
                    yearTxt.setVisible(true);
                }
                break;
        }

    }//GEN-LAST:event_entryCBxActionPerformed

    private void emptyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emptyBtnActionPerformed
        // TODO add your handling code here:
        searchTxt.setText("");
        populateList(storage.getRefs());
    }//GEN-LAST:event_emptyBtnActionPerformed

    private void optionalChckBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionalChckBxActionPerformed
        // TODO add your handling code here:
        entryCBxActionPerformed(evt);
    }//GEN-LAST:event_optionalChckBxActionPerformed

    private void refTabStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_refTabStateChanged
        // TODO add your handling code here:
        if (refTab.getSelectedIndex() == 1) {
            searchBtnActionPerformed(null);
        }
    }//GEN-LAST:event_refTabStateChanged

    private void editRefBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editRefBtnActionPerformed
        this.ref = getSelected();

        if (ref != null) {
            int type = EntryTypeEnums.entryTypes.valueOf(ref.getEntrytype()).ordinal();

            entryCBx.setSelectedIndex(type);
            iterateRef(ref);

            addBtn.setText("Muokkaa");
            refTab.setSelectedIndex(0);
        }
    }//GEN-LAST:event_editRefBtnActionPerformed

    private void bibtexBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bibtexBtnActionPerformed
        BibTex bibtex = null;
//
        if (searchTxt.getText() != null && !searchTxt.getText().isEmpty()) {
            search = new Search(storage.getRefs());
            bibtex = new BibTex(search.listMatching(searchTxt.getText()));
        } else {
            bibtex = new BibTex(storage.getRefs());
        }
        try {
            bibtex.printBibTex();
        } catch (IOException ex) {
            Logger.getLogger(MiniTuhoUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bibtexBtnActionPerformed

    private void addTagBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTagBtnActionPerformed
        // TODO add your handling code here:
        ref.setTag(tagTxt.getText());
    }//GEN-LAST:event_addTagBtnActionPerformed

    private void iterateRef(Reference ref) {
        keyTxt.setText(ref.getKey());

        HashMap<String, String> attr = ref.getAttr();

        Iterator it = attr.entrySet().iterator();

        while (it.hasNext()) {
            Map.Entry pairs = (Map.Entry) it.next();
            String attrKey = pairs.getKey().toString();
            String attrValue = pairs.getValue().toString();

            if (attrKey.equals("address")) {
                addressTxt.setText(attrValue);
            } else if (attrKey.equals("annote")) {
                annoteTxt.setText(attrValue);
            } //            author
            else if (attrKey.equals("booktitle")) {
                booktitleTxt.setText(attrValue);
            } else if (attrKey.equals("chapter")) {
                chapterTxt.setText(attrValue);
            } else if (attrKey.equals("crossref")) {
                crossrefTxt.setText(attrValue);
            } else if (attrKey.equals("edition")) {
                editionTxt.setText(attrValue);
            } //            editor
            else if (attrKey.equals("eprint")) {
                eprintTxt.setText(attrValue);
            } else if (attrKey.equals("howpublished")) {
                howpublishedTxt.setText(attrValue);
            } else if (attrKey.equals("institution")) {
                institutionTxt.setText(attrValue);
            } else if (attrKey.equals("journal")) {
                journalTxt.setText(attrValue);
            } else if (attrKey.equals("key")) {
                keyTxt.setText(attrValue);
            } else if (attrKey.equals("month")) {
                monthTxt.setText(attrValue);
            } else if (attrKey.equals("note")) {
                noteTxt.setText(attrValue);
            } else if (attrKey.equals("number")) {
                numberTxt.setText(attrValue);
            } else if (attrKey.equals("organization")) {
                organizationTxt.setText(attrValue);
            } else if (attrKey.equals("pages")) {
                pagesTxt.setText(attrValue);
            } else if (attrKey.equals("publisher")) {
                publisherTxt.setText(attrValue);
            } else if (attrKey.equals("school")) {
                schoolTxt.setText(attrValue);
            } else if (attrKey.equals("series")) {
                seriesTxt.setText(attrValue);
            } else if (attrKey.equals("title")) {
                titleTxt.setText(attrValue);
            } else if (attrKey.equals("type")) {
                typeTxt.setText(attrValue);
            } else if (attrKey.equals("url")) {
                urlTxt.setText(attrValue);
            } else if (attrKey.equals("volume")) {
                volumeTxt.setText(attrValue);
            } else if (attrKey.equals("year")) {
                yearTxt.setText(attrValue);
            }
        }
    }

    private void getAuthor() {
        auth = new ArrayList<String>();

        String authorFirst = authorTxt1.getText();
        String authorLast = authorTxt2.getText();
        String authorPrefix = authorTxt3.getText();

        if (authorFirst != null && !authorFirst.isEmpty()
                && !authorFirst.contentEquals("first")) {
            auth.add(authorFirst);
            authorTxt1.setText("first");
        }
        if (authorLast != null && !authorLast.isEmpty()
                && !authorLast.contentEquals("last")) {
            auth.add(authorLast);
            authorTxt2.setText("last");
        }
        if (authorPrefix != null && !authorPrefix.isEmpty()
                && !authorPrefix.contentEquals("prefix")) {
            auth.add(authorPrefix);
            authorTxt3.setText("prefix");
        }
        if (!auth.isEmpty()) {
            if (authors == null) {
                authors = new HashMap<Integer, ArrayList<String>>();
            }
            authors.put(authCounter, auth);
            authCounter++;
        }
    }

    private void getEditor() {
        editor = new ArrayList<String>();

        String editorFirst = editorTxt1.getText();
        String editorLast = editorTxt2.getText();
        String editorPrefix = editorTxt3.getText();

        if (editorFirst != null && !editorFirst.isEmpty()
                && !editorFirst.contentEquals("first")) {
            editor.add(editorFirst);
            editorTxt1.setText("first");
        }
        if (editorLast != null && !editorLast.isEmpty()
                && !editorLast.contentEquals("last")) {
            editor.add(editorLast);
            editorTxt2.setText("last");
        }
        if (editorPrefix != null && !editorPrefix.isEmpty()
                && !editorPrefix.contentEquals("prefix")) {
            editor.add(editorPrefix);
            editorTxt3.setText("prefix");
        }
        if (!editor.isEmpty()) {
            if (editors == null) {
                editors = new HashMap<Integer, ArrayList<String>>();
            }
            editors.put(editorCounter, editor);
            editorCounter++;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(MiniTuhoUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(MiniTuhoUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(MiniTuhoUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(MiniTuhoUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception e) {
            System.out.println("Error setting native LAF: " + e);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MiniTuhoUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addAuthBtn;
    private javax.swing.JButton addBtn;
    private javax.swing.JButton addEditBtn;
    private javax.swing.JPanel addPnl;
    private javax.swing.JButton addTagBtn;
    private javax.swing.JLabel addressLbl;
    private javax.swing.JTextField addressTxt;
    private javax.swing.JLabel annoteLbl;
    private javax.swing.JTextField annoteTxt;
    private javax.swing.JLabel authorLbl;
    private javax.swing.JTextField authorTxt1;
    private javax.swing.JTextField authorTxt2;
    private javax.swing.JTextField authorTxt3;
    private javax.swing.JButton bibtexBtn;
    private javax.swing.JLabel booktitleLbl;
    private javax.swing.JTextField booktitleTxt;
    private javax.swing.JLabel chapterLbl;
    private javax.swing.JTextField chapterTxt;
    private javax.swing.JButton closeBtn;
    private javax.swing.JLabel crossrefLbl;
    private javax.swing.JTextField crossrefTxt;
    private javax.swing.JPanel editPnl;
    private javax.swing.JButton editRefBtn;
    private javax.swing.JLabel editionLbl;
    private javax.swing.JTextField editionTxt;
    private javax.swing.JLabel editorLbl;
    private javax.swing.JTextField editorTxt1;
    private javax.swing.JTextField editorTxt2;
    private javax.swing.JTextField editorTxt3;
    private javax.swing.JButton emptyBtn;
    private javax.swing.JComboBox entryCBx;
    private javax.swing.JLabel entryLbl;
    private javax.swing.JLabel eprintLbl;
    private javax.swing.JTextField eprintTxt;
    private javax.swing.JLabel howpublishedLbl;
    private javax.swing.JTextField howpublishedTxt;
    private javax.swing.JLabel institutionLbl;
    private javax.swing.JTextField institutionTxt;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel journalLbl;
    private javax.swing.JTextField journalTxt;
    private javax.swing.JLabel keyLbl;
    private javax.swing.JTextField keyTxt;
    private javax.swing.JLabel monthLbl;
    private javax.swing.JTextField monthTxt;
    private javax.swing.JLabel noteLbl;
    private javax.swing.JTextField noteTxt;
    private javax.swing.JLabel numberLbl;
    private javax.swing.JTextField numberTxt;
    private javax.swing.JCheckBox optionalChckBx;
    private javax.swing.JLabel organizationLbl;
    private javax.swing.JTextField organizationTxt;
    private javax.swing.JLabel pagesLbl;
    private javax.swing.JTextField pagesTxt;
    private javax.swing.JLabel publisherLbl;
    private javax.swing.JTextField publisherTxt;
    private javax.swing.JList refList;
    private javax.swing.JTabbedPane refTab;
    private javax.swing.JButton remRefBtn;
    private javax.swing.JLabel schoolLbl;
    private javax.swing.JTextField schoolTxt;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchTxt;
    private javax.swing.JLabel seriesLbl;
    private javax.swing.JTextField seriesTxt;
    private javax.swing.JLabel tagLbl;
    private javax.swing.JTextField tagTxt;
    private javax.swing.JLabel titleLbl;
    private javax.swing.JTextField titleTxt;
    private javax.swing.JLabel typeLbl;
    private javax.swing.JTextField typeTxt;
    private javax.swing.JLabel urlLbl;
    private javax.swing.JTextField urlTxt;
    private javax.swing.JLabel volumeLbl;
    private javax.swing.JTextField volumeTxt;
    private javax.swing.JLabel yearLbl;
    private javax.swing.JTextField yearTxt;
    // End of variables declaration//GEN-END:variables
}
